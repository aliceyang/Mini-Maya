Joe ForzanoAlice YangKaitlin PollackCIS 277: Mini Maya Documentation [Team Joe Is Hot]*IMPORTANT* THE FOLDER CONTAINING THE OBJ AND MTL FILES MUST BE ON YOUR DESKTOP!

GEOMETER:
	Loading a mesh is handled by MyLoadButton, and writing an OBJ file is handled by MyExport button. When loading an OBJ file that references a .MTL file, the .MTL file must be in the same directory as the OBJ file.
	
	Implementation:
		When loading a mesh, I read the file line by line, and processed it differently depending on the first word in each
line. If they were v or f, the program made either a vertex or a face, and pushed it into either a vector of Vertex* or a vector of Face*. When a face is pushed in, I looped through its vertices to create new HalfEdges and set their NEXT, FACE, and V values. I also used a map which stored a pair of vertices and the halfEdge between them. When processing a face, I pushed the vertices into the vector in reverse order. After everything has been processed, I iterated throughthe map, found the HalfEdge between the pair of vertices (the key), and set its SYM to the HalfEdge in the value field of the map. 
		
		To handle materials, the program opens the .mtl file when it sees "mtllib" in a line. There it reads through the MTL file line by line, and creates a new Material pointer for each material listed in the file. The newly created materials are then pushed into a map, with their string name as the key and the Material pointer as the value. When the program runs into the "usemtl" command, it takes the following word and looks up the corresponding Material pointer. This pointer is then set to a tracking pointer called currMaterial. When currMaterial is set, the material is applied to all subsequent faces. However. when the program runs into the next "usemtl" command, the currMaterial is changed to the new material (via the map lookup),and all subsequent faces then have the new material applied to them.
		
		When exporting a mesh, the program creates a new file, and writes to it. If the original mesh contained a material file, the program will write that on the first line. It then loops through the vector of vertices and	writes them to the file. Afterwards it instantiates a material tracker and starts looping through the vector of faces. If the face's material is the same as the tracker's, nothing new is added. If not, then the line "usemtl" + whatever the new material is is written to the file, and the tracker updated. It then loops through all the halfEdges of each face, finds each corresponding vertex from the vertices vector, and prints the value of index+1, since OBJ vertex indices start at 1 rather than 0.

*****NOTE: uploading a .obj file that uses a material file only works on the windows machine. We've narrowed it down to line 266 of myLoadButton to be causing the problems on the mac machine.************

VISUALIZER:CAMERA CONTROLS      The camera can be rotated around its central reference point by clicking and dragging with the mouse in the desired rotational direction. It can also be controlled with the four arrow keys. To pan the camera (as opposed to rotating it around a central reference point), use the a,s,d,w keys for left, downward, right, and upward panning of the camera. The camera can be zoomed in using the z key and zoomed out using the x key. Whenever needed, the c key can be pressed to return the camera to its original orientation.      In our implementation of mini maya, you can snap focus to both a face and a vertex. For a face, click directly on the desired face and press the space bar—now the centroid of the face is the central reference point of the camera. For vertices, click on a vertex in the vertex-tree widget. Next, click in the openGL widget, and press the space bar. The vertex will now be the central reference of the camera.      There are seven different views available for use: six orthographic, and one perspective. The six orthographic views are accessed by pressing any of keys 1 through 6. The keys correspond to the following views:      1 – front view      2 – right profile      3 – left profile      4 – top       5 – back      6 – bottomin these orthographic views, rotations is disabled, so the camera can only be moved using the a-s-d-w control scheme. From any of these views the user can press the 0 key to return to the perspective view in the state at which they had left it.LIGHTS AND MATERIALS      Upon startup, lighting is enabled, and all eight possible lights are built, but only light0 is enabled. To toggle the enabling of lighting on the scene, press the l key. You can toggle individual lights by clicking on them in the list widget on the left portion of the window, and pressing either the enable or disable buttons, based on what you prefer to do.       All characteristics of a selected light can be altered with the tools under the list widget. The scroll boxes labeled X, Y, and Z change the position of the light.  The RGB sliders change the RGB levels of either the ambient, diffuse, or specular light, depending on light type is currently selected.       The materials can be altered on the right portion of the screen. First, select a face directly by clicking on it or by clicking on it’s corresponding item in the Faces tree-widget. Then, the RGB spin boxes can be used to change the color of the face. Also, the shine check box is used to toggle shine on or off for the face, and the corresponding slider determines the intensity of the shine

KNOWN BUGS
	For some reason, the lights move with the camera, so that if you rotate the camera, it looks as if the object is rotating. Also, when altering a material (aka shininess), if you turn on shininess it applies to all faces, but the level of shininess only applies to the selected face.

DEFORMER:
	Our mini-maya only allows for one mesh to exist in the space at a given time therefore, if you wish to smooth this object you have merely to hit the smooth button. If you load a simple cube, calling smooth multiple times will cause the cube to approach spherical form.
	To use Free Form Deformation- with an object on the screen, hit the FFD button in the Free Form Deformation box. Select vertex is not implemented so you much select the control point you wish to manipulate in adjust it's value with the scroll boxes (vertically: x, y, z) 
	The default is 4x4x4, but if you wish to change this just change the number under the "No. Control Axes" You may smooth before or after adjusting FFD, but if you call smooth after adjusting, you cannot adjust the control points further
		
Explanation:
	Smooth implements Catmull-Clark. A centroid is calculated for each face, and and edge point for each edge. These values become vertices for the object and the original vertices are deformed based on these values.
	FFD - After a control point is moved, we determine which of the object's vertices should be adjusted. We then move them accordingly.
		
Known Bugs:
	messy, uncommented code- it started out very clean and nice, but into crunch time things get messy occasionally smooth will face issues with triangles, but only sometimes and not uniformly... FFD does not use pretty Bezier curves... but it does deform.

	Also, with the smoothing function, it works beautifully when not checking for planarity among faces, but then face selection does not work (since faces aren't planar). We have triangulation of non-planar faces implemented in this submission, but it would take more smooth calls to get the same result (the triangulation is a bit more jagged).



      